<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <!--
    The following properties are set for running HBase as a single process on a
    developer workstation. With this configuration, HBase is running in
    "stand-alone" mode and without a distributed file system. In this mode, and
    without further configuration, HBase and ZooKeeper data are stored on the
    local filesystem, in a path under the value configured for `hbase.tmp.dir`.
    This value is overridden from its default value of `/tmp` because many
    systems clean `/tmp` on a regular basis. Instead, it points to a path within
    this HBase installation directory.

    Running against the `LocalFileSystem`, as opposed to a distributed
    filesystem, runs the risk of data integrity issues and data loss. Normally
    HBase will refuse to run in such an environment. Setting
    `hbase.unsafe.stream.capability.enforce` to `false` overrides this behavior,
    permitting operation. This configuration is for the developer workstation
    only and __should not be used in production!__

    See also https://hbase.apache.org/book.html#standalone_dist
  -->

<property>
    <name>hbase.cluster.distributed</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.tmp.dir</name>
    <value>/srv/hbase/tmp</value>
  </property>
  <property>
    <name>hbase.unsafe.stream.capability.enforce</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.rootdir</name>
    <value>hdfs://hadoop-cluster/hbase</value>
  </property>
  <property>
    <name>hbase.zookeeper.quorum</name>
    <value>hadoop-server-001,hadoop-server-002,hadoop-server-003</value>
  </property>
  <!-- RegionServer通讯端口 -->
  <property>
    <name>hbase.master.port</name>
    <value>16000</value>
  </property>
  <!-- RegionServer集群监控端口 -->
  <property>
    <name>hbase.master.info.port</name>
    <value>16010</value>
  </property>
  <!-- HDFS集群客户端访问端口 -->
  <property>
    <name>hbase.regionserver.port</name>
    <value>16020</value>
  </property>
  <!-- HDFS集群节点监控端口 -->
  <property>
    <name>hbase.regionserver.info.port</name>
    <value>16030</value>
  </property>

    
    <!--  ================hbase kerberos认证配置begin================ -->
    <!-- hbase执行不安全流能力 -->
    <property>
        <name>hbase.unsafe.stream.capability.enforce</name>
        <value>false</value>
    </property>
    <!-- HBase集群安全认证机制:kerberos/simple -->
    <property>
        <name>hbase.security.authentication</name>
        <value>kerberos</value>
    </property>
    <!-- HBase是否开启安全授权机制 -->
    <property>
        <name>hbase.security.authorization</name>
        <value>true</value>
    </property>
    <!-- Hbase rpc通信引擎 -->
    <property>
        <name>hbase.rpc.engine</name>
        <value>org.apache.hadoop.hbase.ipc.SecureRpcEngine</value>
    </property>
    <!-- Hbase协处理器:region配置 -->
    <property>
        <name>hbase.coprocessor.region.classes</name>
        <value>org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController</value>
    </property>
    <!-- Hbase协处理器:master配置 -->
	<property>
        <name>hbase.coprocessor.master.classes</name>
        <value>org.apache.hadoop.hbase.security.access.AccessController</value>
    </property>
    <!-- Hbase协处理器:regionserver配置 -->
    <property>
        <name>hbase.coprocessor.regionserver.classes</name>
        <value>org.apache.hadoop.hbase.security.access.AccessController</value>
    </property>
    <!-- master keytab文件路径  -->
    <property>
        <name>hbase.master.keytab.file</name>
        <value>/srv/kerberos/keytab/hbase.keytab</value>
    </property>
    <!-- master 的kerberos认证账号-->
    <property>
        <name>hbase.master.kerberos.principal</name>
        <value>hbase/_HOST@HADOOP.COM</value>
    </property>
    <!-- regionserver keytab文件路径 -->
    <property>
        <name>hbase.regionserver.keytab.file</name>
        <value>/srv/kerberos/keytab/hbase.keytab</value>
    </property>
    <!-- regionserver 的kerberos认证账号-->
    <property>
        <name>hbase.regionserver.kerberos.principal</name>
        <value>hbase/_HOST@HADOOP.COM</value>
    </property>
    <!--  ================hbase kerberos认证配置end================ -->
<!--
<property>
<name>hbase.master.ipc.address</name>
<value>0.0.0.0</value>
</property>
<property>
<name>hbase.regionserver.ipc.address</name>
<value>0.0.0.0</value>
</property>
-->

</configuration>
